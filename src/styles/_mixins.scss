/* Mixins related to Material UI breakpoints */

@mixin xs-layout() {
    @media only screen and (max-width: 599px) {
        @content;
    }
}

@mixin sm-layout() {
    @media only screen and (min-width: 600px) {
        @content;
    }
}

@mixin md-layout() {
    @media only screen and (min-width: 960px) {
        @content;
    }
}

@mixin lg-layout() {
    @media only screen and (min-width: 1280px) {
        @content;
    }
}

@mixin xl-layout() {
    @media only screen and (min-width: 1920px) {
        @content;
    }
}

/* Responsive setters for property values */

/* Structure of $property-map: { $property-name: (default, sm, md, lg, xl) } */
@mixin responsive-multi-setter($property-map, $limit: 5) {
    @for $i from 1 through 5 {
        @if ($i == 1 and $i <= $limit) {
            @include _responsive-multi-setter-helper($property-map, $i);
        }
        @if ($i == 2 and $i <= $limit) {
            @include sm-layout() {
                @include _responsive-multi-setter-helper($property-map, $i);
            }
        }
        @if ($i == 3 and $i <= $limit) {
            @include md-layout() {
                @include _responsive-multi-setter-helper($property-map, $i);
            }
        }
        @if ($i == 4 and $i <= $limit) {
            @include lg-layout() {
                @include _responsive-multi-setter-helper($property-map, $i);
            }
        }
        @if ($i == 5 and $i <= $limit) {
            @include xl-layout() {
                @include _responsive-multi-setter-helper($property-map, $i);
            }
        }
    }
}

@mixin _responsive-multi-setter-helper($property-map, $value-index) {
    @each $property-name, $property-values in $property-map {
        $value: nth($property-values, $value-index);
        @if ($value) {
            #{$property-name}: $value;
        }
    }
}